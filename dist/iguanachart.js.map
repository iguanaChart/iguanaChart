{"version":3,"sources":["chart.js"],"names":["console","log","$","StrategiesContainer","strategiesList","StrategiesList","Error","prototype","render","container","document","createElement","header","classList","add","innerText","_t","appendChild","items","addItem","item","StrategiesListItem","push","addItems","forEach","renderAddItem","text","icon","list","length","name","icons","renderIcon","title","classNames","window","IguanaChart","options","MODAL_CONTAINERS_MAP","indicators","indicatorsContainer","strategiesContainer","addIndicatorButton","strategyButton","strategies","_this","state","currentModal","currentStrategy","wrapper","lib_path","toQueryString","params","paramStrings","key","hasOwnProperty","value","isArray","i","encodeURIComponent","join","dataSource","iChart","Charting","ChartDataSource","userSettings","chartSettings","contextSettings","fillStyle","strokeStyle","lineWidth","fontFamaly","fontColor","fontSize","indicatorsColor","indicatorsWidth","showTransactionsMode","tradingToolsEnable","autochartistEnable","showVolume","showVolumeByPrice","defaultTheme","currentSecurity","id","short_name","default_ticker","nt_ticker","firstDate","currency","min_step","viewData","timers","ajaxDataRequest","orders","userTransactionAmount","updateUnlocked","initChart","settings","uiGraphIndicatorsWindow2","element","loadHash","paddingBottom","chart","chartOptions","onPostRender","dateFrom","Date","areas","xSeries","viewport","x","bounded","min","dateTo","max","checkDateInterval","remove","trigger","onCreateAreas","chart_onCreateAreas","onDataSettingsChange","chart_onDataSettingsChange","onIntervalChange","chart_onIntervalChange","contextmenuCallback","get","dataSettings","getChartDataUserSettings","widget","env","extend","Chart","TA","setDataSettings","ui","dataRequestCounter","overlay","deserialize","parseQueryString","hash","substr","off","on","e","data","pageX","pageY","chart_dataAdapter","chartData","hloc","volume","tickers","Object","keys","d","ySeries","getTimeOffsetServer","tzOffsetMoscow","points","vl","j","tmstmp","bySchedule","documentHash","useHash","location","drawParams","getDrawParams","_dataSettings","paramKey","match","updateVolumeByPrice","toggleVolumeByPrice_onClick","volumeArea","grep","enabled","VolumeByPrice_onClick","VolumeByDate_onClick","apply_onClick","update","chartType_onChange","chartType","val","setChartType","chartType_elementControl","setHashValue","removeClass","hide","addClass","show","clearIndicators_onClick","updateIndicatorDetails","clearIndicators","date_from","date_to","start","end","interval","timeframe","getChartTimeframe","type","compareIds","compareTickets","compareStocks","graphicIndicators","getMinChartHeight","height","offset","top","indicator_onChange","attr","defaultIndicators","localStorage","userSettingsGraphicIndicators","isEmptyObject","pan_onClick","pan","timeframe_onChange","removeSelectedInstrument_onClick","removeSelected","removeAllInstruments_onClick","clear","resetZoom_onClick","resetZoom","setHashValues","updateForce","updateChart_onClick","removeIndicator_onClick","parents","addIndicator_onClick","is","deserializeIndicators","find","serialize","createStrategiesContainer","map","getIndicators","chooseStrategy_onClick","event","modal","querySelector","target","parentNode","insertBefore","nextSibling","nextModal","modalSettings","style","display","serializeIndicators","query","resetKey","RegExp","regsIndParams","regsInd","replace","filter","n","undefined","indicator","updateChart","$root","indicatorOptions","indForm","append","indicatorInfo","description","parameters","html","appendTo","indicatorParameters","parameterKey","Code","$container","Name","Value","css","$colorContainer","$widthContainer","colorIndex","output","color","indicatorColors","initInsrMinicolors","width","indicatorWidth","initIndicatorWidthMenu","setIndicators","setItem","setScheduleUpdateState","removeIndicator","each","index","p","iParam","updateInterval","showIndicators","empty","forAll","UIkit","JSON","stringify","window_onHashChange","decodeURIComponent","zoom_onClick","zoom","percentMode_onClick","percentMode","iconsLoad","preload","drawLables","legend","context","y","cl","clone","children","values","split","txtWidth","str","font","fillText","measureText","obj","setMousewheelZoomState","turnOn","mousewheelZoom","Boolean","scheduleUpdate","getScrollLength","scrollBack","duration","animate","step","now","fx","scrollForward","futureAmount","complete","call","scrollTo","selection","xSpeed","t","V0","a","startViewportXMin","startViewportXMax","timing","timeFraction","draw","progress","isNaN","ms","V1","scrollX1","viewportDx","getXIndexByValue","getXValue","getXPositionByIndex","x1","x2","_fixViewportBounds","loadMissingData","updateLastCandle","canvas","ltp","chartDate","currentDate","ltt","getTime","point","Math","bap","bbp","getContext","getLastPoint","newPoint","vol","tm","addPoint","lastPointIndex","area","series","inArray","kind","result","getLastPointX","addTransactions","mode","DataLoop","overlayHistory","history","elementType","hasSettings","date_time","price","removeTransactions","splice","setButton","setSettings","updateNewOrderButton","lastPoint","pointX","getNewOrderButton","click","callback","addVisualTradeUI","jNTChartTrading","roundToPrecision","removeNewOrderButton","removeLevel","addLevel","fixViewport","switchTrading","tradingToolsControl","addEvents","events","clearEvents","new_date_from","new_date_to","formatDateTime","fPeriodChanged","interval_tmp","fromNow","Allow1","Array","restriction","intervalNames","intervalShortNames","intervalRestriction","checkPeriodInterval","change","period","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","range","parse","checkPeriod","parseDateTime","periodRegs","setInterval","setHours","setMinutes","setSeconds","currentHash","valuesNew","minicolors","animationSpeed","animationEasing","changeDelay","control","defaultValue","hideSpeed","inline","letterCase","opacity","position","showSpeed","theme","serialIndex","menu","qtip","classes","at","my","effect","content","fixed","delay","slideUp","solo","slideDown","api","setIndicatorWidth","parent","lineIndex","getIndicatorParameters","setIndicator","number","newIndicator","param","oldIndicators","getPeriodDates","dataAdapter","_mergeData","setStyleToCanvas","prop","selected","elementStyle","setLineWidthToCanvas","jNTUserinfo","isDemo","extendIChartWithTrandorders","extendIChartWithOrders","extendIChartWithPositions","extendIChartWithTradePanels","setTrendorder","drawTrendorder","date","date2","price2","textColor","onCancel","data3","data4","tf","data2","initStatesControls","onSelectInstrument","setUiStateForInstrumentLine","setUiStateForInstrumentForm","setUiStateForInstrumentText","stopPropagation","stopImmediatePropagation"],"mappings":"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","file":"iguanachart.js","sourcesContent":["// import { StrategiesContainer } from './components/strategiesContainer'\r\nimport 'core-js';\r\nimport $ from 'jquery';\r\nimport './lib/ichart.core';\r\nimport './lib/indicators.descr';\r\nimport './lib/charting/*';\r\nimport './chart_options_for_nt';\r\nimport './iguana-ui';\r\nimport './jquery.iguana-chart';\r\nimport './jquery.palette';\r\nimport './jquery.simplemodal';\r\nimport './ta/TA_prototypes.js';\r\nimport './ta/functions/*';\r\nimport './ta/TA_common.js';\r\nimport './ta/TA_analyse_rs.js';\r\nconsole.log($);\r\n\r\nfunction StrategiesContainer(strategiesList) {\r\n    if (!(strategiesList instanceof StrategiesList)) {\r\n        throw new Error('StrategiesList was expected');\r\n    }\r\n\r\n    this.strategiesList = strategiesList;\r\n}\r\n\r\nStrategiesContainer.prototype.render = function () {\r\n    const container = document.createElement('div');\r\n    const header = document.createElement('h4');\r\n\r\n    container.classList.add('js-chartTADialogContainerStrategies');\r\n    header.innerText = _t('', 'Выбор стратегии');\r\n\r\n    container.appendChild(header);\r\n    container.appendChild(\r\n      this.strategiesList.render()\r\n    );\r\n\r\n    return container;\r\n};\r\n\r\nfunction StrategiesList() {\r\n    this.items = [];\r\n}\r\n\r\nStrategiesList.prototype.addItem = function (item) {\r\n    if (!(item instanceof StrategiesListItem)) {\r\n        throw new Error('StrategiesListItem was expected');\r\n    }\r\n\r\n    this.items.push(item);\r\n\r\n    return this;\r\n};\r\n\r\nStrategiesList.prototype.addItems = function (items) {\r\n    items.forEach(item => this.addItem(item));\r\n\r\n    return this;\r\n};\r\n\r\nStrategiesList.prototype.renderAddItem = function () {\r\n    const item = document.createElement('li');\r\n    const text = document.createElement('span');\r\n    const icon = document.createElement('i');\r\n\r\n    text.innerText = _t('', 'Добавить стратегию');\r\n    icon.classList.add('uk-icon-plus', 'uk-margin-left');\r\n\r\n    item.appendChild(text);\r\n    item.appendChild(icon);\r\n\r\n    return item;\r\n};\r\n\r\nStrategiesList.prototype.render = function () {\r\n    const list = document.createElement('ul');\r\n\r\n    list.classList.add('uk-list', 'uk-list-line');\r\n\r\n    this.items.forEach(item => list.appendChild(item.render()));\r\n\r\n    // @todo \"10\" to constant\r\n    if (this.items.length < 10) {\r\n        list.appendChild(this.renderAddItem());\r\n    }\r\n\r\n    return list;\r\n};\r\n\r\nfunction StrategiesListItem(name, icons) {\r\n    if (!name) {\r\n        throw new Error('Name is required');\r\n    }\r\n\r\n    this.name = name;\r\n    this.icons = icons;\r\n}\r\n\r\nStrategiesListItem.prototype.renderIcon = function (title, classNames) {\r\n    const icon = document.createElement('i');\r\n\r\n    icon.title = title;\r\n    icon.classList.add(...classNames);\r\n\r\n    return icon;\r\n};\r\n\r\nStrategiesListItem.prototype.render = function () {\r\n    const item = document.createElement('li');\r\n    const text = document.createElement('span');\r\n\r\n    item.appendChild(text);\r\n\r\n    if (this.name === 'default') {\r\n        text.innerText = _t('', 'По умолчанию');\r\n    } else {\r\n        text.innerText = this.name;\r\n\r\n        item.appendChild(this.renderIcon(\r\n          _t('', 'Переименовать'),\r\n          ['uk-icon-pencil', 'uk-margin-left']\r\n        ));\r\n        item.appendChild(this.renderIcon(\r\n          _t('', 'Удалить'),\r\n          ['uk-icon-remove', 'uk-margin-left']\r\n        ));\r\n    }\r\n\r\n    return item;\r\n};\r\n\r\nwindow.IguanaChart = function (options) {\r\n\r\n    \"use strict\";\r\n\r\n    // @todo move me outside\r\n    const MODAL_CONTAINERS_MAP = {\r\n        indicators: {\r\n            indicatorsContainer: 'block',\r\n            strategiesContainer: 'none',\r\n            addIndicatorButton: 'block',\r\n            strategyButton: _t('', 'Выбрать стратегию'),\r\n        },\r\n        strategies: {\r\n            indicatorsContainer: 'none',\r\n            strategiesContainer: 'block',\r\n            addIndicatorButton: 'none',\r\n            strategyButton: _t('', 'Вернуться к выбору индикаторов'),\r\n        },\r\n    };\r\n\r\n\r\n    var _this = this;\r\n\r\n    this.state = {\r\n        currentModal: 'indicators',\r\n        currentStrategy: 'default',\r\n        strategies: [],\r\n    };\r\n\r\n    this.name = options.name || 'chart';\r\n\r\n    this.container = options.container || '#iChart-chart-container';\r\n\r\n    this.wrapper = options.wrapper;\r\n\r\n    this.lib_path = options.lib_path || \"/iguanachart/\";\r\n\r\n    this.toQueryString = function (params) {\r\n        ///\t<summary>\r\n        ///\tConverts the specified associative array to HTTP query string (starting '?' is omitted).\r\n        ///\t</summary>\r\n        ///\t<returns type=\"String\" />\r\n\r\n        var paramStrings = [];\r\n        for (var key in params) {\r\n            if (params.hasOwnProperty(key)) {\r\n                var value = params[key];\r\n                if (typeof value === \"undefined\" || value === \"\") {\r\n                    continue;\r\n                }\r\n\r\n                if ($.isArray(value)) {\r\n                    for (var i = 0; i < value.length; ++i) {\r\n                        paramStrings.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value[i]));\r\n                    }\r\n                } else {\r\n                    paramStrings.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value));\r\n                }\r\n            }\r\n        }\r\n\r\n        return paramStrings.join(\"&\");\r\n    };\r\n\r\n    this.dataSource = new iChart.Charting.ChartDataSource(this, options.dataSource);\r\n\r\n    this.userSettings = {\r\n        chartSettings: {\r\n            contextSettings: {\r\n                fillStyle: 'rgba(82,175,201,.2)',\r\n                strokeStyle: 'rgba(82,175,201,1)',\r\n                lineWidth: 1,\r\n                fontFamaly: 'Arial,Helvetica,sans-serif',\r\n                fontColor: '#444444',\r\n                fontSize: '14'\r\n            },\r\n            indicatorsColor: {},\r\n            indicatorsWidth: {},\r\n\r\n            showTransactionsMode: 0,\r\n            tradingToolsEnable: 1,\r\n            autochartistEnable: 0,\r\n            showVolume: \"inside\",\r\n            showVolumeByPrice: false,\r\n            defaultTheme: 1\r\n        },\r\n        currentSecurity: {\r\n            id: '',\r\n            short_name: '',\r\n            default_ticker: '',\r\n            nt_ticker: '',\r\n            firstDate: '',\r\n            currency: '',\r\n            min_step: ''\r\n        }\r\n    };\r\n\r\n    this.viewData = {};\r\n    this.viewData.indicators = iChart.indicators;\r\n\r\n    this.timers = {};\r\n    this.ajaxDataRequest = null;\r\n    this.orders = {};\r\n    this.userTransactionAmount = -1;\r\n    this.updateUnlocked = true;\r\n\r\n    this.initChart = function (settings) {\r\n        /// <summary>\r\n        /// Initializes the chart.\r\n        /// </summary>\r\n\r\n        this.uiGraphIndicatorsWindow2 = {\r\n            element: $('.js-chartTADialog.' + this.name, this.wrapper),\r\n        };\r\n\r\n        this.loadHash();\r\n\r\n        if (typeof settings != \"object\") {\r\n            settings = {};\r\n        }\r\n\r\n        this.settings = {};\r\n        this.settings.paddingBottom = typeof settings.paddingBottom != \"undefined\" ? settings.paddingBottom : 50;\r\n\r\n        if (typeof this.viewData.chart == \"undefined\") {\r\n\r\n            var chartOptions = {\r\n                onPostRender: function () {\r\n                    var dateFrom = new Date(this.areas[0].xSeries[this.areas[0].viewport.x.bounded.min] * 1000);\r\n                    var dateTo = new Date(this.areas[0].xSeries[this.areas[0].viewport.x.bounded.max] * 1000);\r\n                    _this.checkDateInterval(dateFrom, dateTo);\r\n                    $('#chartLoading').remove();\r\n                    _this.wrapper.trigger('iguanaChartEvents', ['RenderChartSuccess']);\r\n                },\r\n                onCreateAreas: this.chart_onCreateAreas,\r\n                onDataSettingsChange: this.chart_onDataSettingsChange,\r\n                onIntervalChange: this.chart_onIntervalChange,\r\n                contextmenuCallback: settings.contextmenuCallback,\r\n                container: $(this.container).get(0),\r\n                dataSettings: this.getChartDataUserSettings(),\r\n                widget: settings.widget,\r\n                env: this,\r\n            };\r\n\r\n            chartOptions = $.extend(true, chartOptions, settings);\r\n\r\n            this.viewData.chart = new iChart.Charting.Chart(chartOptions);\r\n            this.TA = new iChart.Charting.TA({chart: this.viewData.chart});\r\n            this.viewData.chart.setDataSettings(this.dataSource.dataSettings);\r\n            this.ui = new iChart.ui(this);\r\n            this.dataRequestCounter = 0;\r\n        } else {\r\n            this.viewData.chart.chartOptions = $.extend(true, this.viewData.chart.chartOptions, settings);\r\n            this.viewData.chart.overlay.deserialize(iChart.parseQueryString((this.dataSource.dataSettings.hash|| \"#\").substr(1)));\r\n            this.viewData.chart.setDataSettings(this.getChartDataUserSettings());\r\n            this.dataRequestCounter = 0;\r\n        }\r\n\r\n        if (this.dataSource.dataSettings.strategies) {\r\n            this.state.strategies = this.dataSource.dataSettings.strategies;\r\n        }\r\n\r\n        this.ui.render();\r\n\r\n        $(window).off('mousemove').on('mousemove', function(e){\r\n            $(window).data('mousePosX', e.pageX);\r\n            $(window).data('mousePosY', e.pageY);\r\n        });\r\n\r\n    };\r\n\r\n    this.chart_dataAdapter = function (data, params) {\r\n        var chartData = {\r\n            \"d\": {\r\n                \"xSeries\": [],\r\n                \"ySeries\": [],\r\n                \"success\": true,\r\n                \"warnings\": [],\r\n                \"message\": ''\r\n            }\r\n        };\r\n\r\n        var hloc = {\r\n            \"chartType\": \"Column\",\r\n            \"enabled\": true,\r\n            \"formatProvider\": {\r\n                \"decimalPlaces\": \"2\",\r\n                \"decimalPrecision\": null\r\n            },\r\n            \"indicatorIndex\": null,\r\n            \"indicatorIndex2\": null,\r\n            \"kind\": \"HLOC\",\r\n            \"name\": params.id,\r\n            \"overlay\": false,\r\n            \"points\": [],\r\n            \"valuesPerPoint\": 4\r\n        };\r\n\r\n        var volume = {\r\n            \"chartType\": \"Column\",\r\n            \"enabled\": true,\r\n            \"formatProvider\": {\r\n                \"decimalPlaces\": null,\r\n                \"decimalPrecision\": null\r\n            },\r\n            \"indicatorIndex\": null,\r\n            \"indicatorIndex2\": null,\r\n            \"kind\": \"Volume\",\r\n            \"name\": params.id + \" - V\",\r\n            \"overlay\": false,\r\n            \"points\": [],\r\n            \"valuesPerPoint\": 1\r\n        };\r\n\r\n        if(data.hloc) {\r\n            var tickers = Object.keys(data.hloc);\r\n\r\n            if (tickers.length === 1) {\r\n                chartData.d.ySeries[0] = $.extend(true,{},hloc);\r\n                chartData.d.ySeries[1] = $.extend(true,{},volume);\r\n                chartData.d.ySeries[0].name = tickers[0];\r\n\r\n                for (var i = 0; i < data.xSeries[tickers[0]].length; i++) {\r\n                    //chartData.d.xSeries.push(+(data.xSeries[tickers[0]][i]));\r\n                    chartData.d.xSeries.push(+(data.xSeries[tickers[0]][i]) + getTimeOffsetServer(tzOffsetMoscow));\r\n                    chartData.d.ySeries[0].points.push(data.hloc[tickers[0]][i]);\r\n                    chartData.d.ySeries[1].points.push([data.vl[tickers[0]][i]]);\r\n                }\r\n\r\n            } else if (tickers.length > 1) {\r\n                // При сравнении нескольких бумаг\r\n                //Нормализация по времени\r\n                var x = {}\r\n                for (var j = 0; j < tickers.length; j++) {\r\n                    for (var i = 0; i < data.xSeries[tickers[j]].length; i++) {\r\n                        if(typeof x[data.xSeries[tickers[j]][i]] == \"undefined\") {\r\n                            x[data.xSeries[tickers[j]][i]] = {}\r\n                        }\r\n                        x[data.xSeries[tickers[j]][i]][tickers[j]] = data.hloc[tickers[j]][i];\r\n                    }\r\n                }\r\n\r\n                for (var j = 0; j < tickers.length; j++) {\r\n                    chartData.d.ySeries[j] = $.extend(true,{},hloc);\r\n                    chartData.d.ySeries[j].name = tickers[j];\r\n                }\r\n                //Распределение котировок\r\n                for(var tmstmp in x) {\r\n                    chartData.d.xSeries.push(+(tmstmp) + getTimeOffsetServer(tzOffsetMoscow));\r\n\r\n                    for (var j = 0; j < tickers.length; j++) {\r\n                        if(typeof x[tmstmp][tickers[j]] == \"undefined\") {\r\n                            chartData.d.ySeries[j].points.push([null, null, null, null]);\r\n                        } else {\r\n                            chartData.d.ySeries[j].points.push(x[tmstmp][tickers[j]]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return chartData;\r\n    };\r\n\r\n    this.chart_onCreateAreas = function () {};\r\n\r\n    this.chart_onDataSettingsChange = function (bySchedule)\r\n    {\r\n        /// <summary>\r\n        /// Called when the chart data settings change.\r\n        /// </summary>\r\n\r\n        var documentHash = !_this.dataSource.dataSettings.useHash ? (_this.dataSource.dataSettings.hash || '#') : document.location.hash;\r\n        var params = iChart.parseQueryString(documentHash.substr(1));\r\n        var drawParams = _this.getDrawParams(params);\r\n\r\n        delete _this.viewData.chart._dataSettings.hash;\r\n        var hash = \"#\" + iChart.toQueryString($.extend(_this.viewData.chart._dataSettings, drawParams));\r\n\r\n        _this.viewData.hash = hash;\r\n        if(!_this.dataSource.dataSettings.useHash) {\r\n            if(_this.dataSource.dataSettings.hash !== hash) {\r\n                _this.dataSource.dataSettings.hash = hash;\r\n                $(this.container).trigger('iguanaChartEvents', ['hashChanged', hash]);\r\n            }\r\n        } else if (document.location.hash !== hash) {\r\n            document.location.hash = hash;\r\n            $(this.container).trigger('iguanaChartEvents', ['hashChanged', hash]);\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param params\r\n     * @returns {{}}\r\n     */\r\n    this.getDrawParams = function (params) {\r\n        var drawParams = {};\r\n\r\n        for (var paramKey in params) {\r\n            if (params.hasOwnProperty(paramKey)) {\r\n                if (paramKey.match(/^L$/) || paramKey.match((/^L[0-9]{1,2}_/))) {\r\n                    drawParams[paramKey] = params[paramKey];\r\n                }\r\n            }\r\n        }\r\n\r\n        return drawParams;\r\n    };\r\n\r\n    this.chart_onIntervalChange = function (chart)\r\n    {\r\n        /// <summary>\r\n        /// Called when the date/time interval of the visible viewport changes.\r\n        /// </summary>\r\n        if(_this.viewData.chart) {\r\n            _this.viewData.chart.updateVolumeByPrice();\r\n        }\r\n    };\r\n\r\n    this.toggleVolumeByPrice_onClick = function ()\r\n    {\r\n        this.viewData.chart.chartOptions.showVolumeByPrice = !this.viewData.chart.chartOptions.showVolumeByPrice;\r\n\r\n        if (this.viewData.chart && this.viewData.chart.areas)\r\n        {\r\n            var volumeArea = $.grep(this.viewData.chart.areas, function (x) { return x.name === \"ChartArea2\"; })[0];\r\n            if (volumeArea)\r\n            {\r\n                this.viewData.chart.updateVolumeByPrice();\r\n                volumeArea.enabled = this.viewData.chart.chartOptions.showVolumeByPrice;\r\n            }\r\n\r\n            // Redraw the chart using new settings.\r\n            this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n        }\r\n    };\r\n\r\n    this.VolumeByPrice_onClick = function (state)\r\n    {\r\n\r\n        _this.viewData.chart.chartOptions.showVolumeByPrice = typeof state != \"undefined\" ? state : !_this.viewData.chart.chartOptions.showVolumeByPrice;\r\n\r\n        if (_this.viewData.chart && _this.viewData.chart.areas)\r\n        {\r\n            var volumeArea = $.grep(_this.viewData.chart.areas, function (x) { return x.name === \"VolumeByPriceArea\"; })[0];\r\n            if (volumeArea)\r\n            {\r\n                _this.viewData.chart.updateVolumeByPrice();\r\n            }\r\n            // Redraw the chart using new settings.\r\n            _this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n        }\r\n    };\r\n\r\n    this.VolumeByDate_onClick = function (state)\r\n    {\r\n        if (state === true || state === false) {\r\n            _this.viewData.chart.chartOptions.showVolume = state ? \"inside\" : \"hidden\";\r\n        } else {\r\n            _this.viewData.chart.chartOptions.showVolume = (state === \"inside\" || state === \"outside\")\r\n                ? state\r\n                : _this.viewData.chart.chartOptions.showVolume === \"inside\" || _this.viewData.chart.chartOptions.showVolume === \"outside\"\r\n                    ? \"hidden\"\r\n                    : \"inside\";\r\n        }\r\n\r\n        if (_this.viewData.chart && _this.viewData.chart.areas) {\r\n            var volumeArea = $.grep(_this.viewData.chart.areas, function (x) { return x.name === \"ChartArea2\"; })[0];\r\n            if (volumeArea) {\r\n                volumeArea.enabled = _this.viewData.chart.chartOptions.showVolume === \"inside\" || _this.viewData.chart.chartOptions.showVolume === \"outside\";\r\n            }\r\n            // Redraw the chart using new settings.\r\n            _this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n        }\r\n    };\r\n\r\n    /**********************************************************/\r\n    this.apply_onClick = function () {\r\n        _this.update();\r\n    };\r\n    this.chartType_onChange = function () {\r\n        /// <summary>\r\n        /// Called when selected chart type value changes.\r\n        /// </summary>\r\n        var chartType = $(this).val();\r\n        if (_this.viewData.chart) {\r\n            _this.viewData.chart.setChartType(chartType);\r\n            _this.chartType_elementControl(chartType);\r\n        }\r\n        _this.setHashValue(\"type\", chartType);\r\n        _this.viewData.chart.setChartType(chartType);\r\n    };\r\n\r\n    this.chartType_elementControl = function (chartType) {\r\n        $('div.chartType').removeClass('active');\r\n        $('div.chartType div.isMenu').hide();\r\n        $('div[value=\"'+chartType+'\"]').addClass('active');\r\n        $('div[value=\"'+chartType+'\"] div.isMenu').show();\r\n    };\r\n\r\n    this.clearIndicators_onClick = function () {\r\n        /// <summary>\r\n        /// Removes all technical analysis indicators from the chart.\r\n        /// </summary>\r\n        for (var i = 0; i < 30; ++i) {\r\n            $(\"[name='i\" + i + \"']\").val(\"\").trigger(\"change\");\r\n            _this.updateIndicatorDetails(\"i\" + i, false);\r\n        }\r\n        if (_this.viewData.chart) {\r\n            _this.viewData.chart.clearIndicators();\r\n        }\r\n    };\r\n\r\n    this.getChartDataUserSettings = function () {\r\n        /// <summary>\r\n        /// Gets current chart parameters from the user settings.\r\n        /// </summary>\r\n        var params = {};\r\n        params[\"id\"] = this.dataSource.dataSettings.id;\r\n        params.date_from = this.dataSource.dataSettings.date_from;\r\n        params.date_to = this.dataSource.dataSettings.date_to;\r\n        params.start = this.dataSource.dataSettings.date_from;\r\n        params.end = this.dataSource.dataSettings.date_to;\r\n        params.interval = this.dataSource.dataSettings.interval;\r\n        params.timeframe = iChart.getChartTimeframe(this.dataSource.dataSettings.interval);\r\n        params[\"type\"] = this.dataSource.dataSettings.type;\r\n        params[\"compareIds\"] = this.dataSource.dataSettings.compareIds;\r\n        params[\"compareTickets\"] = this.dataSource.dataSettings.compareTickets;\r\n        params[\"compareStocks\"] = this.dataSource.dataSettings.compareStocks;\r\n        //var p = $('[name=form_info_settings]').serializeArray();\r\n        //for (var i = 0; i < p.length; i++) {\r\n        //    params[p[i].name] = p[i].value;\r\n        //}\r\n        //$.extend(params, iChart.parseQueryString(localStorage.userSettingsGraphicIndicators));\r\n        $.extend(params, iChart.parseQueryString(this.dataSource.dataSettings.graphicIndicators));\r\n        return params;\r\n    };\r\n\r\n    this.getMinChartHeight = function ()\r\n    {\r\n        var container = $(this.container);\r\n        if (container.length !== 0) {\r\n            return $(window).height() - container.offset().top - (this.settings && this.settings.paddingBottom ? this.settings.paddingBottom : 0);\r\n        }\r\n        return $(window).height();\r\n    };\r\n\r\n    this.indicator_onChange = function () {\r\n        _this.updateIndicatorDetails($(this).attr('name').substr(1), {name: $(this).val()});\r\n    };\r\n\r\n    this.loadHash = function (bySchedule) {\r\n        /// <summary>\r\n        /// Updates form values based on the current page hash.\r\n        /// </summary>\r\n        var defaultIndicators = $(\"[name=graphicIndicators]\").val();\r\n\r\n        var hash = (this.dataSource.dataSettings.hash || (\"#\" + defaultIndicators) || \"#&i0=SMA&i0_Period=10&i1=PSAR&i1_Acceleration=0.02&i1_Maximum=0.2\");\r\n\r\n        var params = iChart.parseQueryString(hash.substr(1));\r\n\r\n        if(typeof this.viewData.chart !== 'undefined') {\r\n            var graphicIndicators = iChart.parseQueryString(localStorage.userSettingsGraphicIndicators);\r\n            if(typeof graphicIndicators == \"object\" && !$.isEmptyObject(graphicIndicators)) {\r\n                $.extend(params, graphicIndicators);\r\n            }\r\n        }\r\n\r\n        return params;\r\n    };\r\n\r\n    this.pan_onClick = function () {\r\n        if (_this.viewData.chart) {\r\n            _this.viewData.chart.pan($(this).attr(\"data-direction\"));\r\n        }\r\n    };\r\n    this.timeframe_onChange = function () {\r\n        this.update();\r\n    };\r\n    this.removeSelectedInstrument_onClick = function () {\r\n        if (_this.viewData.chart.overlay) {\r\n            _this.viewData.chart.overlay.removeSelected();\r\n        }\r\n        return false;\r\n    };\r\n    this.removeAllInstruments_onClick = function () {\r\n        if (_this.viewData.chart.overlay) {\r\n            _this.viewData.chart.overlay.clear();\r\n        }\r\n        $(\".m-chart-instrument-delete, .m-chart-instrument-settings\").hide();\r\n        return false;\r\n    };\r\n    this.resetZoom_onClick = function () {\r\n        if (_this.viewData.chart) {\r\n            _this.viewData.chart.resetZoom();\r\n        }\r\n    };\r\n    this.update = function () {\r\n        /// <summary>\r\n        /// Forces a full chart data update.\r\n        /// </summary>\r\n        var dataSettings = this.getChartDataUserSettings();\r\n        if (!this.dataSource.dataSettings.useHash) {\r\n            this.setHashValues(dataSettings);\r\n        }\r\n        if (this.viewData.chart) {\r\n            this.viewData.chart.setDataSettings(dataSettings);\r\n        }\r\n\r\n    };\r\n    this.updateForce = function () {\r\n        var dataSettings = this.getChartDataUserSettings();\r\n        if (!this.dataSource.dataSettings.useHash) {\r\n            this.setHashValues(dataSettings);\r\n        }\r\n        if (this.viewData.chart) {\r\n            this.viewData.chart.setDataSettings(dataSettings, true);\r\n        }\r\n    };\r\n    this.updateChart_onClick = function () {\r\n        this.update();\r\n    };\r\n\r\n    this.removeIndicator_onClick = function () {\r\n        $(this).parents('.js-chart-indiacator-block').remove();\r\n    };\r\n\r\n    this.addIndicator_onClick = function () {\r\n        if(_this.uiGraphIndicatorsWindow2.element.is(':visible')) {\r\n            var indicators = _this.deserializeIndicators(_this.uiGraphIndicatorsWindow2.element.find(':input').serialize(), false);\r\n            _this.updateIndicatorDetails(indicators.length, '');\r\n        }\r\n    };\r\n\r\n    this.createStrategiesContainer = () => {\r\n        return (new StrategiesContainer(\r\n          (new StrategiesList())\r\n            .addItems(this.state.strategies.map(({ name }) => new StrategiesListItem(name)))\r\n        )).render();\r\n    }\r\n\r\n    this.getIndicators = () => this.deserializeIndicators(this.uiGraphIndicatorsWindow2.element.find(':input').serialize(), false);\r\n\r\n    this.chooseStrategy_onClick = (event) => {\r\n        console.log(this.viewData)\r\n        const modal = this.uiGraphIndicatorsWindow2.element[0];\r\n\r\n        if (!modal) {\r\n            throw new Error('There should be modal');\r\n        }\r\n\r\n        const indicatorsContainer = modal.querySelector('.js-chartTADialogContainer');\r\n        const { currentModal } = this.state;\r\n\r\n        const strategyButton = event.target;\r\n        const addIndicatorButton = modal.querySelector('.js-indicator-add');\r\n\r\n        let strategiesContainer = modal.querySelector('.js-chartTADialogContainerStrategies');\r\n\r\n        if (!strategiesContainer) {\r\n            strategiesContainer = this.createStrategiesContainer();\r\n\r\n            indicatorsContainer.parentNode.insertBefore(\r\n              strategiesContainer,\r\n              indicatorsContainer.nextSibling\r\n            )\r\n        }\r\n\r\n        const nextModal = currentModal === 'indicators'\r\n          ? 'strategies'\r\n          : 'indicators';\r\n        const modalSettings = MODAL_CONTAINERS_MAP[nextModal];\r\n\r\n        indicatorsContainer.style.display = modalSettings.indicatorsContainer;\r\n        strategiesContainer.style.display = modalSettings.strategiesContainer;\r\n        addIndicatorButton.style.display = modalSettings.addIndicatorButton;\r\n        strategyButton.innerText = modalSettings.strategyButton;\r\n\r\n        this.state.currentModal = nextModal;\r\n    };\r\n\r\n    this.serializeIndicators = function (indicators) {\r\n        var query = '';\r\n        for(var i=0; i<indicators.length; i++) {\r\n            query += \"i\" + i + \"=\" + indicators[i].name + \"&\";\r\n\r\n            if(indicators[i].params) {\r\n                for(var paramKey in indicators[i].params) {\r\n                    if (indicators[i].params.hasOwnProperty(paramKey)) {\r\n                        query += \"i\" + i + \"_\" + paramKey + \"=\" + indicators[i].params[paramKey] + \"&\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return query;\r\n    };\r\n\r\n    this.deserializeIndicators = function (query, resetKey) {\r\n        resetKey = typeof resetKey != \"undefined\" ? !!resetKey : true;\r\n        var params = iChart.parseQueryString(query);\r\n        var indicators = [];\r\n        for (var paramKey in params) {\r\n            if (params.hasOwnProperty(paramKey)) {\r\n                if (paramKey === \"fs\" || paramKey.match(new RegExp(\"^i[0-9]+\", \"i\"))) {\r\n                    var regsIndParams = paramKey.match(new RegExp(\"^i([0-9])+_\", \"i\"));\r\n                    var regsInd = paramKey.match(new RegExp(\"^i([0-9])+$\", \"i\"));\r\n                    if (regsInd) {\r\n                        if(!indicators[+regsInd[1]]) {\r\n                            indicators[+regsInd[1]] = {};\r\n                        }\r\n                        indicators[+regsInd[1]].name = params[paramKey];\r\n                    } else if(regsIndParams) {\r\n                        if(!indicators[+regsIndParams[1]]) {\r\n                            indicators[+regsIndParams[1]] = {};\r\n                        }\r\n                        if(!indicators[+regsIndParams[1]].params) {\r\n                            indicators[+regsIndParams[1]].params = {};\r\n                        }\r\n                        indicators[+regsIndParams[1]].params[paramKey.replace(/i[0-9]+_/i, '')] = +(params[paramKey]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (resetKey) {\r\n            indicators = indicators.filter(function (n) {\r\n                return n !== undefined\r\n            });\r\n        }\r\n        return indicators;\r\n    };\r\n\r\n    this.updateIndicatorDetails = function (id, indicator, updateChart) {\r\n\r\n        updateChart = !!updateChart;\r\n\r\n        var $root = this.uiGraphIndicatorsWindow2.element.find(\".js-chartTADialog-i\" + id + \"-settings\");\r\n\r\n        if(!$root.length) {\r\n            var indicatorOptions = '<option value=\"\">'+  _t('14773', 'Выберите индикатор') +'</option>';\r\n\r\n            for(var key in this.viewData.indicators) {\r\n                if (this.viewData.indicators.hasOwnProperty(key)) {\r\n                    if (this.viewData.indicators[key].type === \"TA_LIB\") {\r\n                        indicatorOptions += '<option value=\"' + key + '\" ' + ((key === indicator.name) ? 'selected' : '') + '>' + this.viewData.indicators[key].name + '</option>';\r\n                    }\r\n                }\r\n            }\r\n\r\n            var indForm =\r\n            '<div style=\"border-bottom: 1px solid rgba(0, 0, 0, 0.12)\" class=\"js-chart-indiacator-block tm-pad-large js-chartTADialog-i' + id + '-settings\" id=\"iChart-i' + id + '-settings\">' +\r\n                '<div class=\"uk-panel\">' +\r\n                    '<div class=\"uk-flex uk-flex-middle uk-flex-space-between uk-margin-small-bottom\">' +\r\n                        '<div class=\"uk-h4\">' + _t('12834','Индикатор') + ' ' + (id+1) + '</div>' +\r\n                        '<div class=\"js-indicator-remove uk-icon-close uk-panel-hover uk-badge uk-button uk-button-mini\"></div>' +\r\n                    '</div>' +\r\n                    '<div class=\"uk-form\">' +\r\n                        '<select name=\"i' + id + '\" class=\"indicatorsSelect\">' +\r\n                        indicatorOptions +\r\n                        '</select>' +\r\n                    '</div>' +\r\n                '</div>' +\r\n            '</div>';\r\n\r\n            this.uiGraphIndicatorsWindow2.element.find(\".js-chartTADialogContainer\").append(indForm);\r\n            $root = this.uiGraphIndicatorsWindow2.element.find(\".js-chartTADialog-i\" + id + \"-settings\");\r\n        }\r\n\r\n        $(\".iChart-indicator-description, .iChart-indicator-parameters, .iChart-indicator-colors, .iChart-indicator-width\", $root).remove();\r\n\r\n        var indicatorInfo = this.viewData.indicators[indicator.name] || {description:'',parameters:[]};\r\n\r\n        $(\"<div/>\", { \"class\":\"iChart-indicator-description\" }).html(indicatorInfo.description).appendTo($root);\r\n        var indicatorParameters = indicatorInfo.parameters;\r\n\r\n        for (var j = 0; j < indicatorParameters.length; ++j) {\r\n            var parameterKey = \"i\" + id + \"_\" + indicatorParameters[j].Code;\r\n            var $container = $(\"<div/>\", { \"class\":\"iChart-indicator-parameters uk-form\", \"text\":indicatorParameters[j].Name + \": \" }).appendTo($root);\r\n            $(\"<input/>\", { \"name\":parameterKey, \"type\":\"text\", \"value\":indicatorParameters[j].Value }).css({ \"width\":\"50px\" }).appendTo($container);\r\n        }\r\n\r\n        var $colorContainer = $(\"<div/>\", {\"class\":\"iChart-indicator-colors\", \"id\":\"iChart-indicator-colors\"}).appendTo($root);\r\n        var $widthContainer = $(\"<div/>\", {\"class\":\"iChart-indicator-width\", \"id\":\"iChart-indicator-width\"}).appendTo($root);\r\n        var colorIndex = id;\r\n\r\n        if(this.viewData.indicators[indicator.name]) {\r\n            for (var i = 0; i < this.viewData.indicators[indicator.name].output; i++) {\r\n                if (typeof this.viewData.chart != 'undefined') {\r\n\r\n                    var color = this.viewData.chart.chartOptions.indicatorColors[colorIndex][i];\r\n                    if (this.userSettings.chartSettings.indicatorsColor[indicator.name] &&\r\n                        this.userSettings.chartSettings.indicatorsColor[indicator.name][colorIndex] &&\r\n                        this.userSettings.chartSettings.indicatorsColor[indicator.name][colorIndex][i]\r\n                    ) {\r\n                        color = this.userSettings.chartSettings.indicatorsColor[indicator.name][colorIndex][i];\r\n                    }\r\n\r\n                    $(\"<input/>\", {\r\n                            \"type\": \"hidden\",\r\n                            \"class\": \"iChart-indicator-color iChart-indicator-color-\" + colorIndex + i,\r\n                            \"id\": \"iChart-indicator-color-\" + colorIndex + i,\r\n                            \"indicator\": indicator.name,\r\n                            \"colorIndex\": colorIndex + \"-\" + i,\r\n                            \"ui-pos\": (colorIndex < 2 ? \"bottom\" : \"top\")\r\n                        }\r\n                    ).val(color).appendTo($colorContainer);\r\n\r\n\r\n                    this.initInsrMinicolors($(\".iChart-indicator-color-\" + colorIndex + i));\r\n\r\n                    var width = 2;\r\n                    if (this.userSettings.chartSettings.indicatorsWidth[indicator.name] &&\r\n                        this.userSettings.chartSettings.indicatorsWidth[indicator.name][colorIndex] &&\r\n                        this.userSettings.chartSettings.indicatorsWidth[indicator.name][colorIndex][i]) {\r\n                        width = this.userSettings.chartSettings.indicatorsWidth[indicator.name][colorIndex][i];\r\n                    }\r\n\r\n                    var indicatorWidth = $('<span class=\"lineWidth indicatorWidthSelector-' + colorIndex + i + '\" data-chartName=\"' + this.name + '\" data-style=\"' + width + '\"></span>').appendTo($widthContainer);\r\n                    $('<div class=\"indicatorMenuHolder-' + colorIndex + i + '\" data-chartName=\"' + this.name + '\" style=\"display: none\" widthIndex=\"' + colorIndex + \"-\" + i + '\">' +\r\n                        '<div widthIndex=\"' + colorIndex + \"-\" + i + '\" indicator=\"' + indicator.name + '\">' +\r\n                        '<span class=\"lineWidth js-lineWidth ' + this.name + '\" data-style=\"1\"></span>' +\r\n                        '<span class=\"lineWidth js-lineWidth ' + this.name + '\" data-style=\"2\"></span>' +\r\n                        '<span class=\"lineWidth js-lineWidth ' + this.name + '\" data-style=\"3\"></span>' +\r\n                        '<span class=\"lineWidth js-lineWidth ' + this.name + '\" data-style=\"4\"></span>' +\r\n                        '<span class=\"lineWidth js-lineWidth ' + this.name + '\" data-style=\"5\"></span>' +\r\n                        '<span class=\"lineWidth js-lineWidth ' + this.name + '\" data-style=\"8\"></span>' +\r\n                        '<span class=\"lineWidth js-lineWidth ' + this.name + '\" data-style=\"10\"></span>' +\r\n                        '</div>' +\r\n                        '</div>').appendTo($widthContainer);\r\n                    this.initIndicatorWidthMenu(indicatorWidth, $(\".indicatorMenuHolder-\" + colorIndex + i + \"[data-chartName='\" + this.name + \"']\").html());\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        if (updateChart) {\r\n            this.update();\r\n        }\r\n\r\n    };\r\n\r\n    this.setIndicators = function(graphicIndicators) {\r\n\r\n        window.localStorage.setItem('userSettingsGraphicIndicators', graphicIndicators);\r\n        this.dataSource.dataSettings.graphicIndicators = graphicIndicators;\r\n\r\n        this.setScheduleUpdateState(0);\r\n        this.TA.removeIndicator();\r\n        if(typeof _this.TA != \"undefined\") {\r\n            var indicators = iChart.parseQueryString(this.dataSource.dataSettings.graphicIndicators);\r\n            $.each(indicators, function (n, i) {\r\n                var params = {};\r\n                if(i && n.match(/^i[0-9]+$/) && _this.viewData.indicators[i] && _this.viewData.indicators[i].type === \"TA_LIB\") {\r\n                    var index = n.match(/^i([0-9]+)$/)[1];\r\n                    for(var p = 0; p < _this.viewData.indicators[i].parameters.length; p++) {\r\n                        var iParam = _this.viewData.indicators[i].parameters[p];\r\n                        params[iParam.Code] = indicators[n + \"_\" + iParam.Code];\r\n                    }\r\n                    _this.TA[i](0, index);\r\n                    _this.TA[i](1, index, params);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.wrapper.trigger('iguanaChartEvents', ['hashChanged']);\r\n        this.wrapper.trigger('iguanaChartEvents', ['indicatorsChanged', this.deserializeIndicators(this.dataSource.dataSettings.graphicIndicators)]);\r\n        if(this.timers.updateInterval) {this.setScheduleUpdateState(1, this.timers.updateInterval)}\r\n\r\n    };\r\n\r\n    this.showIndicators = function (options) {\r\n        options = options || {};\r\n        //$(\"#iChart-tech-analysis-dialog\").show();\r\n        this.timers.updateInterval = this.viewData.chart.chartOptions.updateInterval;\r\n        this.setScheduleUpdateState(0);\r\n\r\n        var indicators = this.deserializeIndicators(this.dataSource.dataSettings.graphicIndicators);\r\n\r\n        this.uiGraphIndicatorsWindow2.element.find(\".js-chartTADialogContainer\").empty();\r\n\r\n        for (var i=0; i<indicators.length; i++) {\r\n            this.updateIndicatorDetails(i, indicators[i], false);\r\n\r\n            for (var paramKey in indicators[i].params) {\r\n                if (indicators[i].params.hasOwnProperty(paramKey)) {\r\n                    var name = \"i\" + i + \"_\" + paramKey;\r\n                    this.uiGraphIndicatorsWindow2.element.find(\"[name='\" + name + \"']\").val(indicators[i].params[paramKey]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!options.forAll) {\r\n            this.uiGraphIndicatorsWindow2.element.find('.indicators-default').hide();\r\n        }\r\n\r\n        if (!this.uiGraphIndicatorsWindow2.UIkit) {\r\n            $(this.wrapper).find('.js-chartTADialog.' + this.name).appendTo('body');\r\n            this.uiGraphIndicatorsWindow2 = UIkit.modal($('.js-chartTADialog.' + this.name));\r\n        }\r\n\r\n        this.uiGraphIndicatorsWindow2.show();\r\n\r\n        $('.indicators-set').off('click').on('click', function () {\r\n            window.localStorage.setItem('userSettingsIndicatorsColor', JSON.stringify(_this.userSettings.chartSettings.indicatorsColor));\r\n            window.localStorage.setItem('userSettingsIndicatorsWidth', JSON.stringify(_this.userSettings.chartSettings.indicatorsWidth));\r\n            console.log(_this.uiGraphIndicatorsWindow2.element.find(':input').serialize());\r\n            _this.setIndicators(_this.uiGraphIndicatorsWindow2.element.find(':input').serialize());\r\n            _this.uiGraphIndicatorsWindow2.hide();\r\n            return false;\r\n        });\r\n        $('.indicators-close').off('click').on('click', function () {\r\n            _this.uiGraphIndicatorsWindow2.hide();\r\n            if(_this.timers.updateInterval) {_this.setScheduleUpdateState(1, _this.timers.updateInterval)}\r\n            return false;\r\n        });\r\n    };\r\n\r\n    this.window_onHashChange = function () {\r\n        if (typeof _this == 'undefined') return;\r\n\r\n        var hash;\r\n\r\n        if (!_this.dataSource.dataSettings.useHash) {\r\n            hash = _this.dataSource.dataSettings.hash;\r\n        } else {\r\n            hash = document.location.hash;\r\n        }\r\n        if (decodeURIComponent(hash) !== decodeURIComponent(_this.viewData.hash)) {\r\n            _this.loadHash();\r\n            _this.update();\r\n\r\n            if (typeof _this.viewData.chart == 'undefined') return;\r\n            if (_this.viewData.chart.overlay) {\r\n                _this.viewData.chart.overlay.update();\r\n            }\r\n        }\r\n    };\r\n\r\n    this.zoom_onClick = function () {\r\n        if (_this.viewData.chart) {\r\n            _this.viewData.chart.zoom($(this).attr(\"data-zoom\"));\r\n        }\r\n    };\r\n\r\n    this.percentMode_onClick = function () {\r\n        if(_this.viewData.chart.chartOptions.percentMode) {\r\n            $('#percentMode').removeClass('active');\r\n        } else {\r\n            $('#percentMode').addClass('active');\r\n        }\r\n        _this.viewData.chart.chartOptions.percentMode = !_this.viewData.chart.chartOptions.percentMode;\r\n        _this.updateForce();\r\n        return _this.viewData.chart.chartOptions.percentMode;\r\n    };\r\n\r\n    this.iconsLoad = function () {\r\n        $([\"/i/admin/add.png\",\r\n            \"/iguanachart/images/buy.png\",\r\n            \"/iguanachart/images/down.png\",\r\n            \"/iguanachart/images/icon-exclamation.png\",\r\n            \"/iguanachart/images/icon-left.png\",\r\n            \"/iguanachart/images/icon-leftDown.png\",\r\n            \"/iguanachart/images/icon-leftUp.png\",\r\n            \"/iguanachart/images/icon-question.png\",\r\n            \"/iguanachart/images/icon-right.png\",\r\n            \"/iguanachart/images/icon-rightDown.png\",\r\n            \"/iguanachart/images/icon-rightUp.png\",\r\n            \"/iguanachart/images/icon-sell.png\",\r\n            \"/iguanachart/images/icon-smileDown.png\",\r\n            \"/iguanachart/images/icon-smileUp.png\",\r\n            \"/iguanachart/images/icon-up.png\",\r\n            \"/i/logo_tradernet_min.png\"]).preload();\r\n    };\r\n    this.drawLables = function (legend, context, x, y) {\r\n        x = (typeof x == \"undefined\") ? 0 : x;\r\n        y = (typeof y == \"undefined\") ? 0 : y;\r\n        //var cl = $('.m-chart-t').eq(2).clone();\r\n        var cl = $(legend).clone();\r\n        $(cl).children('span').remove();\r\n        var values = $(cl).html().split(/ &nbsp; /);\r\n        var txtWidth = x;\r\n        var str = '';\r\n        str = values[0].replace(/&nbsp;/g, '');\r\n        context.font = 'normal 9px Arial,Helvetica,sans-serif';\r\n        context.fillStyle = '#636669';\r\n        context.fillText(str, txtWidth, y);\r\n        txtWidth += context.measureText(str).width + 10;\r\n        $(legend).children('span:odd').each(function (i, obj) {\r\n            str = $(obj).text();\r\n            context.font = 'bold 9px Arial,Helvetica,sans-serif';\r\n            context.fillStyle = $(obj).css('color');\r\n            context.fillText(str, txtWidth, y);\r\n            txtWidth += context.measureText(str).width;\r\n            str = values[i + 1].replace(/&nbsp;/g, '');\r\n            context.font = 'normal 9px Arial,Helvetica,sans-serif';\r\n            context.fillStyle = '#636669';\r\n            context.fillText(str, txtWidth, y);\r\n            txtWidth += context.measureText(str).width + 10;\r\n        });\r\n    };\r\n\r\n    this.setMousewheelZoomState = function (turnOn) {\r\n        this.viewData.chart.chartOptions.mousewheelZoom = Boolean(turnOn);\r\n    }\r\n\r\n    this.setScheduleUpdateState = function (turnOn) {\r\n        this.viewData.chart.chartOptions.updateInterval = Boolean(turnOn);\r\n        this.viewData.chart.scheduleUpdate();\r\n    }\r\n\r\n    this.getScrollLength = function () {\r\n        this.viewData.chart.viewport.x.min = this.viewData.chart.areas[0].viewport.x.min;\r\n        this.viewData.chart.viewport.x.max = this.viewData.chart.areas[0].viewport.x.max;\r\n\r\n        return this.viewData.chart.viewport.x.max - this.viewData.chart.viewport.x.min;\r\n    }\r\n\r\n    this.scrollBack = function () {\r\n        var length = this.getScrollLength();\r\n        var min = this.viewData.chart.viewport.x.min;\r\n        var duration = 1500 + min;\r\n        $('<p>').animate({\r\n            width: min\r\n        }, {\r\n            duration: duration,\r\n            step: function(now, fx){\r\n                _this.viewData.chart.viewport.x.min = min - now;\r\n                _this.viewData.chart.viewport.x.max = _this.viewData.chart.viewport.x.min + length;\r\n                _this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": true });\r\n            }\r\n        });\r\n    }\r\n\r\n    this.scrollForward = function () {\r\n        var length = this.getScrollLength();\r\n        var max = this.viewData.chart.areas[0].xSeries.length - 1 - this.viewData.chart.chartOptions.futureAmount;\r\n        var p  = $('<p>').css({width: this.viewData.chart.viewport.x.max});\r\n        var duration = 1500 + (max - this.viewData.chart.viewport.x.max);\r\n\r\n        p.animate({\r\n            width: max\r\n        }, {\r\n            duration: duration,\r\n            step: function(now, fx){\r\n                _this.viewData.chart.viewport.x.max = now;\r\n                _this.viewData.chart.viewport.x.min = now - length;\r\n                _this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": true });\r\n            },\r\n            complete: function() {\r\n                _this.viewData.chart.onDataSettingsChange.call(_this.viewData.chart);\r\n                _this.wrapper.trigger('iguanaChartEvents', ['hashChanged']);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.scrollTo = function (selection) {\r\n\r\n        var xSpeed = selection.xSpeed;\r\n\r\n        if(xSpeed < 0.05) {\r\n            return false;\r\n        }\r\n\r\n        var t = 1000 + xSpeed * 100;\r\n        var V0 = xSpeed;\r\n        var a = -V0 / t;\r\n\r\n        var _this = this;\r\n        var startViewportXMin =  this.viewData.chart.viewport.x.min;\r\n        var startViewportXMax =  this.viewData.chart.viewport.x.max;\r\n\r\n        iChart.animate({\r\n            duration: t,\r\n            timing: function (timeFraction) {\r\n                return timeFraction;\r\n            },\r\n            draw: function (progress) {\r\n\r\n                if( !isNaN(progress) && progress > 0) {\r\n                    var ms = t * progress;\r\n\r\n                    var V1 = V0 + a * ms;\r\n                    var scrollX1 = (V0 * ms) + ((a * ms * ms) / 2);\r\n\r\n                    var viewportDx = _this.viewData.chart.areas[0].getXIndexByValue(_this.viewData.chart.areas[0].getXValue(_this.viewData.chart.areas[0].getXPositionByIndex(0) + scrollX1));\r\n\r\n                    if (selection.x1 > selection.x2) {\r\n                        _this.viewData.chart.viewport.x.min = startViewportXMin + viewportDx;\r\n                        _this.viewData.chart.viewport.x.max = startViewportXMax + viewportDx;\r\n                    } else if (selection.x1 < selection.x2) {\r\n                        _this.viewData.chart.viewport.x.min = startViewportXMin - viewportDx;\r\n                        _this.viewData.chart.viewport.x.max = startViewportXMax - viewportDx;\r\n                    }\r\n\r\n                    _this.viewData.chart._fixViewportBounds();\r\n                    _this.viewData.chart.render({\"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": true});\r\n\r\n                }\r\n            },\r\n            complete: function () {\r\n                _this.viewData.chart.loadMissingData();\r\n            }\r\n        });\r\n    };\r\n\r\n    this.updateLastCandle = function (data) {\r\n        if(!data) { return;}\r\n        var element = data;\r\n        if(typeof this.viewData.chart != \"undefined\" && !!this.viewData.chart.areas && this.viewData.chart.canvas && !!this.viewData.chart.chartOptions.updateInterval && element.ltp) {\r\n            var chartDate = new Date(this.viewData.chart.areas[0].xSeries[this.viewData.chart.areas[0].xSeries.length-this.viewData.chart.chartOptions.futureAmount-1]*1000);\r\n            var currentDate = new Date(data.ltt);\r\n            if(currentDate.getTime() >= chartDate.getTime() && currentDate.getTime() < (chartDate.getTime() + this.viewData.chart._dataSettings.timeframe * 60000)) {\r\n                var point = this.viewData.chart.areas[0].ySeries[0].points[this.viewData.chart.areas[0].ySeries[0].points.length-this.viewData.chart.chartOptions.futureAmount-1];\r\n                point[3] = element.ltp;\r\n                point[0] = Math.max(point[0], point[3]);\r\n                point[1] = Math.min(point[1], point[3]);\r\n                point[4] = element.bap;\r\n                point[5] = element.bbp;\r\n\r\n                var context = iChart.getContext(this.viewData.chart.canvas);\r\n                this.viewData.chart.render({ \"context\": context, \"forceRecalc\": false, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n            } else if(currentDate.getTime() > (chartDate.getTime() + this.viewData.chart._dataSettings.timeframe * 60000)) {\r\n\r\n                var point = this.getLastPoint();\r\n                var newPoint = {\r\n                    \"hloc\": {},\r\n                    \"vl\": {},\r\n                    \"xSeries\" : {}\r\n                };\r\n\r\n                var hloc = [];\r\n                hloc[0] = element.ltp;\r\n                hloc[1] = element.ltp;\r\n                hloc[2] = element.ltp;\r\n                hloc[3] = element.ltp;\r\n\r\n                newPoint[\"hloc\"][Object.keys(point.xSeries)[0]] = [hloc];\r\n                newPoint[\"vl\"][Object.keys(point.xSeries)[0]] = [element.vol];\r\n\r\n                var tm = ((currentDate.getTime() - currentDate.getTime() % (this.viewData.chart._dataSettings.timeframe * 60000)) / 1000) - getTimeOffsetServer(tzOffsetMoscow);\r\n                newPoint[\"xSeries\"][Object.keys(point.xSeries)[0]] = [tm];\r\n\r\n                this.addPoint(newPoint);\r\n            }\r\n        }\r\n    };\r\n\r\n    this.getLastPoint = function () {\r\n        if(typeof this.viewData.chart != \"undefined\" && !!this.viewData.chart.areas && this.viewData.chart.canvas) {\r\n            var _this = this;\r\n            var lastPointIndex = this.viewData.chart.areas[0].ySeries[0].points.length-this.viewData.chart.chartOptions.futureAmount-1;\r\n            var name = this.viewData.chart.areas[0].ySeries[0].name;\r\n\r\n            var hloc = {},\r\n                vl = {},\r\n                xSeries = {};\r\n\r\n            xSeries[name] = [this.viewData.chart.areas[0].xSeries[lastPointIndex]];\r\n\r\n            $.each(this.viewData.chart.areas, function(i,area){\r\n                $.each(area.ySeries, function(j,series){\r\n                    if($.inArray(series.kind, ['HLOC', 'Volume']) >= 0) {\r\n                        if(series.kind == 'HLOC') {\r\n                            hloc[name] = [series.points[lastPointIndex]];\r\n                        }\r\n                        if(series.kind == 'Volume') {\r\n                            vl[name] = [series.points[lastPointIndex]];\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n            var result = {\r\n                \"hloc\": hloc,\r\n                \"vl\": vl,\r\n                \"xSeries\": xSeries\r\n            };\r\n\r\n            return result;\r\n        }\r\n    };\r\n\r\n    this.getLastPointX = function () {\r\n        if(typeof this.viewData.chart != \"undefined\" && !!this.viewData.chart.areas && this.viewData.chart.canvas) {\r\n            var lastPointIndex = this.viewData.chart.areas[0].ySeries[0].points.length-this.viewData.chart.chartOptions.futureAmount-1;\r\n            return this.viewData.chart.areas[0].xSeries[lastPointIndex];\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.addTransactions = function (data, mode) {\r\n        if(typeof this.viewData.chart != \"undefined\") {\r\n            DataLoop:\r\n                for(var i=0; i < data.length; i++) {\r\n                    var overlayHistory = this.viewData.chart.overlay.history;\r\n                    for(var j=0; j < overlayHistory.length; j++) {\r\n                        var element = overlayHistory[j];\r\n                        if(element.elementType == \"Trade\" && element.id == data[i].id) {\r\n                            continue  DataLoop;\r\n                        }\r\n                    }\r\n\r\n                    var element = this.viewData.chart.overlay.createElement(\"Trade\");\r\n                    element.hasSettings = true;\r\n                    element.settings = data[i];\r\n                    element.settings.mode = mode;\r\n                    element.points = [{'x':new Date(data[i].date_time).getTime(), 'y':data[i].price}];\r\n                    element.id = data[i].id;\r\n                    this.viewData.chart.overlay.history.push(element);\r\n                    this.userTransactionAmount++;\r\n                }\r\n            this.viewData.chart.overlay.render();\r\n        }\r\n    };\r\n\r\n    this.removeTransactions = function () {\r\n        if(typeof this.viewData.chart != \"undefined\") {\r\n            var overlayHistory = this.viewData.chart.overlay.history;\r\n            for(var i=0; i < overlayHistory.length; i++) {\r\n                var element = overlayHistory[i];\r\n                if(element.elementType == \"Trade\") {\r\n                    overlayHistory.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n            this.userTransactionAmount = -1;\r\n            this.viewData.chart.overlay.render();\r\n        }\r\n    }\r\n\r\n    this.setButton = function (data) {\r\n        if(typeof this.viewData.chart != \"undefined\") {\r\n            var element = this.viewData.chart.overlay.createElement(\"Button\");\r\n            element.hasSettings = true;\r\n            element.setSettings(data);\r\n            element.points = [{'x':data.point, 'y':data.price}];\r\n            //element.id = data[i].id;\r\n            this.viewData.chart.overlay.history.push(element);\r\n            //this.viewData.chart.overlay.render();\r\n        }\r\n\r\n\r\n    };\r\n\r\n    this.updateNewOrderButton = function () {\r\n        var lastPoint = this.viewData.chart.areas[0].getXPositionByIndex(this.viewData.chart.areas[0].xSeries.length-1-this.viewData.chart.chartOptions.futureAmount) + 50;\r\n        lastPoint = Math.min(lastPoint, this.viewData.chart.areas[0].getXPositionByIndex(this.viewData.chart.areas[0].xSeries.length-1));\r\n        var pointX = this.viewData.chart.areas[0].getXValue(lastPoint)*1000;\r\n        var point = this.viewData.chart.areas[0].ySeries[0].points[this.viewData.chart.areas[0].ySeries[0].points.length-this.viewData.chart.chartOptions.futureAmount-1];\r\n\r\n        var element = this.getNewOrderButton();\r\n        if(element) {\r\n            element.points[0].x = pointX;\r\n            element.points[0].y = point[3];\r\n        } else {\r\n            var click = function () {\r\n                var point = _this.viewData.chart.areas[0].ySeries[0].points[_this.viewData.chart.areas[0].ySeries[0].points.length-_this.viewData.chart.chartOptions.futureAmount-1];\r\n                var callback = function(){\r\n                    _this.addVisualTradeUI();\r\n                };\r\n                jNTChartTrading.show(_this.userSettings.currentSecurity.nt_ticker, 2, iChart.roundToPrecision(point[3], _this.userSettings.currentSecurity.min_step), null, null, callback);\r\n                _this.removeNewOrderButton();\r\n            }\r\n            this.setButton({point: pointX, price: point[3], click: click});\r\n        }\r\n\r\n    }\r\n\r\n    this.getNewOrderButton = function () {\r\n        if(typeof this.viewData.chart != \"undefined\") {\r\n            var overlayHistory = this.viewData.chart.overlay.history;\r\n            for(var i=0; i < overlayHistory.length; i++) {\r\n                var element = overlayHistory[i];\r\n                if(element.elementType == \"Button\") {\r\n                    return element;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.removeNewOrderButton = function () {\r\n        if(typeof this.viewData.chart != \"undefined\") {\r\n            var overlayHistory = this.viewData.chart.overlay.history;\r\n            for(var i=0; i < overlayHistory.length; i++) {\r\n                var element = overlayHistory[i];\r\n                if(element.elementType == \"Button\") {\r\n                    overlayHistory.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.removeLevel = function () {\r\n        if (typeof this.viewData.chart != \"undefined\") {\r\n            var overlayHistory = this.viewData.chart.overlay.history;\r\n            for (var i = 0; i < overlayHistory.length; i++) {\r\n                var element = overlayHistory[i];\r\n                if (element.elementType == \"Level\") {\r\n                    overlayHistory.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.addLevel = function (data) {\r\n        if(typeof this.viewData.chart != \"undefined\") {\r\n            this.removeLevel();\r\n\r\n            var element = this.viewData.chart.overlay.createElement(\"Level\");\r\n            element.hasSettings = true;\r\n            element.points = [{'x':new Date(), 'y':data.price}];\r\n            element.setSettings(data);\r\n            this.viewData.chart.overlay.history.push(element);\r\n            this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": true, \"testForIntervalChange\": false });\r\n            return element;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    this.fixViewport = function () {\r\n        if(typeof this.viewData.chart != \"undefined\" && this.viewData.chart.areas && this.viewData.chart.areas[0].viewport.x.max == this.viewData.chart.areas[0].viewport.x.min) {\r\n            this.viewData.chart.viewport.x.max = this.viewData.chart.areas[0].viewport.x.max - this.viewData.chart.chartOptions.futureAmount;\r\n            this.viewData.chart.viewport.x.min = Math.max(this.viewData.chart.areas[0].viewport.x.max - this.viewData.chart.chartOptions.futureAmount - 30 ,0);\r\n            this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n        }\r\n    };\r\n\r\n    this.switchTrading = function () {\r\n        this.userSettings.chartSettings.tradingToolsEnable = this.userSettings.chartSettings.tradingToolsEnable ? 0 : 1;\r\n        window.localStorage.setItem('userSettingsTradingToolsEnable', this.userSettings.chartSettings.tradingToolsEnable);\r\n        //$(this.container).trigger('chartTradingTools');\r\n        $(this.container).trigger('iguanaChartEvents', ['chartTradingTools', this.userSettings.chartSettings.tradingToolsEnable]);\r\n    };\r\n\r\n    this.tradingToolsControl = function() {\r\n        if(this.userSettings.chartSettings.tradingToolsEnable) {\r\n\r\n            //this.updateNewOrderButton();\r\n            //this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n        } else {\r\n\r\n            //this.removeNewOrderButton();\r\n            //this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n        }\r\n    };\r\n\r\n    this.addEvents = function(events) {\r\n        events = events || [];\r\n        for (var i = 0; i < events.length; i++) {\r\n            var element = this.viewData.chart.overlay.createElement(\"Event\");\r\n            element.hasSettings = true;\r\n            var data = $.extend({}, events[i]);\r\n            element.setSettings(data);\r\n            element.points = [{x: data.x, y:data.y}];\r\n            element.id = 'Event';\r\n            this.viewData.chart.overlay.history.push(element);\r\n        }\r\n        this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n    };\r\n\r\n    this.clearEvents = function() {\r\n        if (typeof this.viewData.chart != \"undefined\") {\r\n            var overlayHistory = this.viewData.chart.overlay.history;\r\n            for (var i = 0; i < overlayHistory.length; i++) {\r\n                var element = overlayHistory[i];\r\n                if (element.elementType == \"Event\") {\r\n                    overlayHistory.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n            this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": false, \"testForIntervalChange\": false });\r\n        }\r\n    };\r\n\r\n    this.checkDateInterval = function (new_date_from, new_date_to) {\r\n\r\n        var date_from = iChart.formatDateTime(new Date(new_date_from), \"dd.MM.yyyy HH:mm\");\r\n        var date_to = iChart.formatDateTime(new Date(new_date_to), \"dd.MM.yyyy HH:mm\");\r\n\r\n        var fPeriodChanged = false;\r\n        if (this.dataSource.dataSettings.date_from != date_from || this.dataSource.dataSettings.date_to != date_to) {\r\n            fPeriodChanged = true;\r\n        }\r\n\r\n        this.dataSource.dataSettings.date_from = date_from;\r\n        this.dataSource.dataSettings.date_to = date_to;\r\n        this.dataSource.dataSettings.start = date_from;\r\n        this.dataSource.dataSettings.end = date_to;\r\n        //this.dataSource.dataSettings.end = date_to + ' 23:59';\r\n        var interval_tmp = this.dataSource.dataSettings.interval;\r\n\r\n        var interval = (new_date_to - new_date_from) / 86400000;\r\n        var fromNow = (new Date().getTime() - new_date_from) / 86400000;\r\n\r\n        var Allow1 = new Array;\r\n\r\n        Allow1.push(\"I1\");\r\n        Allow1.push(\"I5\");\r\n        Allow1.push(\"I15\");\r\n        Allow1.push(\"H1\");\r\n        Allow1.push(\"D1\");\r\n        Allow1.push(\"D7\"); //TODO: нету данных в mChartAnalysisJSON, нужна доработка сервера\r\n\r\n        var restriction = {};\r\n\r\n        if(fromNow > 93) { // больше полгода\r\n            restriction = {\"I1\":\"D1\", \"I5\":\"D3\", \"I15\":\"D7\", \"H1\":\"M1\"}\r\n        } else if (fromNow < 93 && fromNow >= 32) { // от трех месяцев до полгода\r\n            restriction = {\"I1\":\"D1\", \"I5\":\"D3\", \"I15\":\"D7\"}\r\n        } else if (fromNow < 32 && fromNow >= 10) { // от месяца до трех месяцев\r\n            restriction = {\"I1\":\"D1\", \"I5\":\"D3\"}\r\n        } else if (fromNow < 10 && fromNow >= 3) { // от недели до месяца\r\n            restriction = {\"I1\":\"D1\"}\r\n        } else if (fromNow < 3 && fromNow >= 0) { // от дня\r\n        }\r\n\r\n        var dataSource = new Array();\r\n\r\n        for (var i = 0; i < Allow1.length; i++) {\r\n            var text = intervalNames(Allow1[i]) + ((typeof restriction[Allow1[i]] != \"undefined\") ? (\" > \" + intervalShortNames(restriction[Allow1[i]])) : \"\");\r\n            dataSource.push({ text: text, value: Allow1[i], restriction: restriction[Allow1[i]] });\r\n        }\r\n\r\n\r\n        this.dataSource.dataSettings.interval = interval_tmp;\r\n\r\n        var result = {restriction: restriction, dataSource: dataSource, value: interval_tmp, text: intervalNames(interval_tmp)};\r\n        if(JSON.stringify(this.dataSource.dataSettings.intervalRestriction) != JSON.stringify(restriction) && interval_tmp == this.dataSource.dataSettings.interval) {\r\n            this.dataSource.dataSettings.intervalRestriction = restriction;\r\n            $(this.container).trigger('iguanaChartEvents', ['intervalRestriction', result]);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    this.checkPeriodInterval = function (obj, change) {\r\n\r\n        if (change === undefined) change = true;\r\n        var date_to = new Date();\r\n        var date_from = new Date();\r\n        var period;\r\n        period = $(obj).val();\r\n        // задание начальной даты\r\n        switch (period) {\r\n            case \"D1\":\r\n                break;\r\n            case \"D7\":\r\n                date_from.setDate(date_to.getDate() - 7);\r\n                break;\r\n            case \"M1\":\r\n                date_from.setMonth(date_to.getMonth() - 1);\r\n                break;\r\n            case \"M3\":\r\n                date_from.setMonth(date_to.getMonth() - 3);\r\n                break;\r\n            case \"M6\":\r\n                date_from.setMonth(date_to.getMonth() - 6);\r\n                break;\r\n            case \"Y1\":\r\n                date_from.setFullYear(date_to.getFullYear() - 1);\r\n                break;\r\n            case \"Y5\":\r\n                date_from.setFullYear(date_to.getFullYear() - 5);\r\n                break;\r\n            default:\r\n                date_from.setMonth(date_to.getMonth() - 3);\r\n        }\r\n\r\n        if (period) {\r\n            $('#date_to').val(iChart.formatDateTime(date_to, \"dd.MM.yyyy\"));\r\n            $('#date_from').val(iChart.formatDateTime(date_from, \"dd.MM.yyyy\"));\r\n        } else {\r\n            var range = (Date.parse($(\"#date_to\").val()) - Date.parse($(\"#date_from\").val())) / 1000;\r\n            if($(\"#interval\").val() == \"D1\" && range < 86400) {\r\n                $('#date_from').val(iChart.formatDateTime(new Date(Date.parse($(\"#date_from\").val()).getTime() - 86400000 * 7), \"dd.MM.yyyy\"));\r\n            } else if ($(\"#interval\").val() == \"D7\" && range < 86400 * 7) {\r\n                $('#date_from').val(iChart.formatDateTime(new Date(Date.parse($(\"#date_from\").val()).getTime() - 86400000 * 14), \"dd.MM.yyyy\"));\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    this.checkPeriod = function (period) {\r\n\r\n        var date_to = iChart.parseDateTime(this.dataSource.dataSettings.date_to);\r\n        var date_from = new Date(date_to);\r\n\r\n        // задание начальной даты\r\n\r\n        var periodRegs = period.match(/([D,M,Y])(\\d+)/);\r\n\r\n        if(periodRegs) {\r\n            switch (periodRegs[1]) {\r\n                case \"D\":\r\n                    date_from.setDate(date_to.getDate() - +(periodRegs[2]));\r\n                    break;\r\n                case \"M\":\r\n                    date_from.setMonth(date_to.getMonth() - +(periodRegs[2]));\r\n                    break;\r\n                case \"Y\":\r\n                    date_from.setFullYear(date_to.getFullYear() - +(periodRegs[2]));\r\n                    break;\r\n            }\r\n        } else {\r\n            period = \"D1\";\r\n        }\r\n\r\n        if (period) {\r\n            this.dataSource.dataSettings.date_from = iChart.formatDateTime(date_from, \"dd.MM.yyyy\");\r\n            this.dataSource.dataSettings.date_to = iChart.formatDateTime(date_to, \"dd.MM.yyyy\");\r\n        } else {\r\n            var range = (iChart.parseDateTime(this.dataSource.dataSettings.date_from).getTime() - iChart.parseDateTime(this.dataSource.dataSettings.date_to).getTime()) / 1000;\r\n            if (this.dataSource.dataSettings.interval == \"D1\" && range < 86400) {\r\n                this.dataSource.dataSettings.date_from = iChart.formatDateTime(new Date(iChart.parseDateTime(this.dataSource.dataSettings.date_from).getTime() - 86400000 * 7), \"dd.MM.yyyy\");\r\n            } else if (this.dataSource.dataSettings.interval == \"D7\" && range < 86400 * 7) {\r\n                this.dataSource.dataSettings.date_from = iChart.formatDateTime(new Date(iChart.parseDateTime(this.dataSource.dataSettings.date_from).getTime() - 86400000 * 14), \"dd.MM.yyyy\");\r\n            }\r\n        }\r\n        this.checkDateInterval(iChart.parseDateTime(this.dataSource.dataSettings.date_from), iChart.parseDateTime(this.dataSource.dataSettings.date_to));\r\n    };\r\n\r\n    this.setInterval = function (interval) {\r\n\r\n        var period = \"M1\";\r\n        switch (interval) {\r\n            case \"I1\":\r\n                period = \"D1\";\r\n                break;\r\n            case \"I5\":\r\n                period = \"D3\";\r\n                break;\r\n            case \"I15\":\r\n                period = \"D7\";\r\n                break;\r\n            case \"H1\":\r\n                period = \"D14\";\r\n                break;\r\n            case \"D1\":\r\n                period = \"M6\";\r\n                break;\r\n            case \"D7\":\r\n                period = \"Y1\";\r\n                break;\r\n        }\r\n\r\n        var date_to = new Date(this.getLastPointX() * 1000);\r\n        date_to.setHours(0);\r\n        date_to.setMinutes(0);\r\n        date_to.setSeconds(0);\r\n        date_to.setDate(date_to.getDate()+1);\r\n\r\n        this.dataSource.dataSettings.date_to = date_to;\r\n        this.dataSource.dataSettings.interval = interval;\r\n        this.dataSource.dataSettings.timeframe = iChart.getChartTimeframe(interval);\r\n        this.checkPeriod(period);\r\n        this.updateForce();\r\n    };\r\n\r\n    this.setHashValue = function (key, value)\r\n    {\r\n        /// <summary>\r\n        /// Sets value at the specified key in the location hash.\r\n        /// </summary>\r\n        /// <param name=\"key\">A key at which the value should be stored.</param>\r\n        /// <param name=\"value\">A value to set.</param>\r\n\r\n        if (this.dataSource.dataSettings.useHash == false) {\r\n            var currentHash = this.dataSource.dataSettings.hash;\r\n        } else {\r\n            var currentHash = document.location.hash;\r\n        }\r\n        var values = iChart.parseQueryString(currentHash.substr(1));\r\n        values[key] = value;\r\n        var hash = \"#\" + iChart.toQueryString(values);\r\n        if (hash !== currentHash)\r\n        {\r\n            if (this.dataSource.dataSettings.useHash == false) {\r\n                this.dataSource.dataSettings.hash = hash;\r\n            } else {\r\n                document.location.hash = hash;\r\n            }\r\n            $(this.container).trigger('iguanaChartEvents', ['hashChanged', hash]);\r\n        }\r\n    };\r\n\r\n    this.setHashValues = function (valuesNew)\r\n    {\r\n        /// <summary>\r\n        /// Sets values at the specified keys in the location hash.\r\n        /// </summary>\r\n        /// <param name=\"valuesNew\" type=\"Object\">A dictionary of values to set.</param>\r\n\r\n        if (this.dataSource.dataSettings.useHash == false) {\r\n            var currentHash = this.dataSource.dataSettings.hash;\r\n        } else {\r\n            var currentHash = document.location.hash;\r\n        }\r\n\r\n        var values = iChart.parseQueryString(currentHash.substr(1));\r\n        for (var key in valuesNew)\r\n        {\r\n            if (valuesNew.hasOwnProperty(key))\r\n            {\r\n                values[key] = valuesNew[key];\r\n            }\r\n        }\r\n        var hash = \"#\" + iChart.toQueryString(values);\r\n        if (hash !== currentHash && !$.isEmptyObject(values))\r\n        {\r\n            if (this.dataSource.dataSettings.useHash == false) {\r\n                this.dataSource.dataSettings.hash = hash;\r\n            } else {\r\n                document.location.hash = hash;\r\n            }\r\n            $(this.container).trigger('iguanaChartEvents', ['hashChanged', hash]);\r\n        }\r\n    };\r\n\r\n    this.initInsrMinicolors = function (element) {\r\n        var color = element.val();\r\n\r\n        $(element).minicolors({\r\n            animationSpeed: 50,\r\n            animationEasing: 'swing',\r\n            change: null,\r\n            changeDelay: 0,\r\n            control: 'hue',\r\n            defaultValue: color,\r\n            hide: null,\r\n            hideSpeed: 100,\r\n            inline: false,\r\n            letterCase: 'lowercase',\r\n            opacity: false,\r\n            position: element.attr('ui-pos') + ' left',\r\n            show: null,\r\n            showSpeed: 100,\r\n            theme: 'default'\r\n        }).change(function(){\r\n            var serialIndex = $(this).attr('colorIndex').split('-')[0];\r\n            var colorIndex = $(this).attr('colorIndex').split('-')[1];\r\n            var indicator = $(this).attr('indicator');\r\n            if($.isArray(_this.userSettings.chartSettings.indicatorsColor)) {\r\n                _this.userSettings.chartSettings.indicatorsColor = {};\r\n            }\r\n            if(!_this.userSettings.chartSettings.indicatorsColor[indicator]) {\r\n                _this.userSettings.chartSettings.indicatorsColor[indicator] = [];\r\n            }\r\n            if(!_this.userSettings.chartSettings.indicatorsColor[indicator][serialIndex]) {\r\n                _this.userSettings.chartSettings.indicatorsColor[indicator][serialIndex] = Array(_this.viewData.indicators[indicator].output);\r\n            }\r\n            _this.userSettings.chartSettings.indicatorsColor[indicator][serialIndex][colorIndex] = $(this).val();\r\n        });\r\n    };\r\n\r\n    this.initIndicatorWidthMenu = function (element, menu) {\r\n        $(element).qtip({\r\n            style: {\r\n                classes: 'qtip-light'\r\n            },\r\n            position: {\r\n                at: 'left bottom',\r\n                my: 'top left',\r\n                effect: false\r\n            },\r\n            content: {\r\n                text: menu\r\n            },\r\n            hide: {\r\n                fixed: true,\r\n                delay: 300,\r\n                effect: function() {\r\n                    //$(this).hide('slide', 500);\r\n                    $(this).slideUp(500);\r\n                }\r\n            },\r\n            show: {\r\n                solo: true,\r\n                effect: function() {\r\n                    //$(this).show('slideDown', 500);\r\n                    $(this).slideDown(500);\r\n                }\r\n            },\r\n            events: {\r\n                show: function(event, api) {\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    this.setIndicatorWidth = function (element) {\r\n\r\n        var serialIndex = $(element).parent().attr('widthIndex').split('-')[0];\r\n        var lineIndex = $(element).parent().attr('widthIndex').split('-')[1];\r\n        var indicator = $(element).parent().attr('indicator');\r\n\r\n        if($.isArray(this.userSettings.chartSettings.indicatorsWidth)) {\r\n            this.userSettings.chartSettings.indicatorsWidth = {};\r\n        }\r\n\r\n        if(!this.userSettings.chartSettings.indicatorsWidth[indicator]) {\r\n            this.userSettings.chartSettings.indicatorsWidth[indicator] = [];\r\n        }\r\n        if(!this.userSettings.chartSettings.indicatorsWidth[indicator][serialIndex]) {\r\n            this.userSettings.chartSettings.indicatorsWidth[indicator][serialIndex] = Array(this.viewData.indicators[indicator].output);\r\n        }\r\n        $(\".indicatorWidthSelector-\" + serialIndex + lineIndex + \"[data-chartName='\" + this.name +\"']\").attr('data-style', $(element).attr('data-style'));\r\n        this.userSettings.chartSettings.indicatorsWidth[indicator][serialIndex][lineIndex] = $(element).attr('data-style');\r\n    };\r\n\r\n    this.getIndicatorParameters = function (indicator) {\r\n        var params = {};\r\n        if(typeof this.viewData.indicators[indicator] != \"undefined\") {\r\n            for(var i=0; i<this.viewData.indicators[indicator].parameters.length;i++) {\r\n                params[this.viewData.indicators[indicator].parameters[i].Code] = this.viewData.indicators[indicator].parameters[i].Value;\r\n            }\r\n        }\r\n        return params;\r\n    };\r\n\r\n    this.setIndicator = function (indicator, params, number) {\r\n        number = number || 0;\r\n\r\n        if(typeof this.viewData.indicators[indicator] == \"undefined\") {\r\n            throw new Error(\"Indicator '\" + indicator + \"' is not supported.\");\r\n        }\r\n\r\n        params = params || this.getIndicatorParameters(indicator);\r\n\r\n        var newIndicator = {};\r\n\r\n        newIndicator['i'+number] = indicator;\r\n        for(var param in params) {\r\n            newIndicator['i' + number + '_' + param] = params[param];\r\n        }\r\n\r\n        var oldIndicators = iChart.parseQueryString(this.dataSource.dataSettings.graphicIndicators);\r\n        for (var paramKey in oldIndicators)\r\n        {\r\n            if (paramKey.match(new RegExp(\"^i\" + number + '_', \"i\"))) {\r\n                delete  oldIndicators[paramKey];\r\n            }\r\n        }\r\n\r\n        oldIndicators['i' + number] = '';\r\n        this.dataSource.dataSettings.graphicIndicators = iChart.toQueryString($.extend({}, oldIndicators, newIndicator));\r\n        this.updateForce();\r\n    };\r\n\r\n    this.getPeriodDates = function (period) {\r\n        var date_to = new Date();\r\n        var date_from = new Date();\r\n\r\n        date_to.setHours(0);\r\n        date_to.setMinutes(0);\r\n        date_to.setSeconds(0);\r\n        date_to.setDate(date_to.getDate()+1);\r\n        date_from.setHours(0);\r\n        date_from.setMinutes(0);\r\n        date_from.setSeconds(0);\r\n\r\n        var periodRegs = period.match(/([D,M,Y])(\\d+)/);\r\n\r\n        if(periodRegs) {\r\n            switch (periodRegs[1]) {\r\n                case \"D\":\r\n                    date_from.setDate(date_from.getDate() - +(periodRegs[2]) + 1);\r\n                    break;\r\n                case \"M\":\r\n                    date_from.setMonth(date_from.getMonth() - +(periodRegs[2]));\r\n                    break;\r\n                case \"Y\":\r\n                    date_from.setFullYear(date_from.getFullYear() - +(periodRegs[2]));\r\n                    break;\r\n            }\r\n        } else {\r\n            date_from.setMonth(date_from.getMonth() - +(3));\r\n        }\r\n\r\n        return {\r\n            date_from: iChart.formatDateTime(date_from, \"dd.MM.yyyy\"),\r\n            date_to: iChart.formatDateTime(date_to, \"dd.MM.yyyy\")\r\n        };\r\n    };\r\n\r\n    this.addPoint = function (point) {\r\n        var data = this.dataSource.dataAdapter(point, {});\r\n        this.viewData.chart._mergeData(data, {});\r\n        this.viewData.chart.render({\r\n            \"forceRecalc\": true,\r\n            \"resetViewport\": false,\r\n            \"testForIntervalChange\": false\r\n        });\r\n    };\r\n\r\n    this.setStyleToCanvas = function (color, prop) {\r\n        var selected = this.viewData.chart.overlay.selected;\r\n        if (selected != null && selected.hasSettings) {\r\n            var settings = selected.settings;\r\n            settings[prop] = color;\r\n            selected.setSettings(settings);\r\n            if(this.viewData.chart.chartOptions.elementStyle[selected.elementType]) {\r\n                this.viewData.chart.chartOptions.elementStyle[selected.elementType][prop] = color;\r\n            }\r\n        }\r\n        this.userSettings.chartSettings.contextSettings[prop] = color;\r\n    };\r\n\r\n    this.setLineWidthToCanvas = function (width) {\r\n        var selected = this.viewData.chart.overlay.selected;\r\n        if (selected != null && selected.hasSettings) {\r\n            selected.settings.lineWidth = width;\r\n            selected.setSettings(selected.settings);\r\n        }\r\n\r\n        this.userSettings.chartSettings.contextSettings.lineWidth = width;\r\n    };\r\n\r\n    if(typeof jNTChartTrading != 'undefined') {\r\n        /*//РИСОВАНИЕ ПРИКАЗОВ*/\r\n\r\n        if (typeof jNTUserinfo !== \"undefined\" && jNTUserinfo.isDemo) {\r\n            if (typeof extendIChartWithTrandorders == 'function') {\r\n                extendIChartWithTrandorders.call(this);\r\n            }\r\n        } else {\r\n            if (typeof extendIChartWithOrders == 'function') {\r\n                extendIChartWithOrders.call(this);\r\n            }\r\n        }\r\n\r\n        /*РИСВАНИЕ ПОЗИЦИИ*/\r\n        if (typeof extendIChartWithPositions == 'function') {\r\n            extendIChartWithPositions.call(this);\r\n        }\r\n\r\n        /*РИСВАНИЕ ТОРГОВЫХ ПАНЕЛЕЙ*/\r\n        if (typeof extendIChartWithTradePanels == 'function') {\r\n            extendIChartWithTradePanels.call(this);\r\n        }\r\n    }\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n    this.setTrendorder = function (data) {\r\n\r\n        if(typeof this.viewData.chart != \"undefined\") {\r\n\r\n            var element = this.viewData.chart.overlay.createElement(\"Trendorder\");\r\n            element.hasSettings = true;\r\n            element.setSettings(data);\r\n\r\n            this.viewData.chart.overlay.history.push(element);\r\n\r\n        }\r\n    };\r\n\r\n    this.drawTrendorder = function () {\r\n\r\n        var data = {\r\n            date: 1461569774688.537,\r\n            price: 2890.65358452394,\r\n            date2: 1461584727590.7007,\r\n            price2: 2883.7317157761254,\r\n            fillStyle: '#7cb342',\r\n            strokeStyle: '#36BDF4',\r\n            textColor: '#ffffff',\r\n            text: 'Трендовый приказ',\r\n            mode: \"trend\",\r\n            onCancel: function() {console.log(this);}\r\n        };\r\n\r\n        var data3 = {\r\n            date: 1461531600000,\r\n            price: 2893,\r\n            date2: 1461618000000,\r\n            price2: 2879,\r\n            fillStyle: '#7cb342',\r\n            strokeStyle: '#36BDF4',\r\n            textColor: '#ffffff',\r\n            text: 'Трендовый приказ',\r\n            mode: \"trend\",\r\n            onCancel: function() {console.log(this);}\r\n        };\r\n\r\n        var data4 = {\r\n            date: 1472798700000,\r\n            price: 142.73127071556314,\r\n            date2: 1472799600000,\r\n            price2: 142.75374359194433,\r\n            tf: 900,\r\n            fillStyle: '#7cb342',\r\n            strokeStyle: '#36BDF4',\r\n            textColor: '#ffffff',\r\n            text: 'Трендовый приказ',\r\n            mode: \"trend\",\r\n            onCancel: function() {console.log(this);}\r\n        };\r\n\r\n        var data2 = {\r\n            date: 1472553953049000,\r\n            price: 135,\r\n            fillStyle: '#7cb342',\r\n            strokeStyle: '#36BDF4',\r\n            textColor: '#ffffff',\r\n            text: 'Трендовый приказ',\r\n            mode: \"line\",\r\n            onCancel: function() {console.log(this);}\r\n        };\r\n\r\n\r\n        this.setTrendorder(data4);\r\n        this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": true, \"testForIntervalChange\": false });\r\n    };\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n    $(document).on(\"change\", \".indicatorsSelect\", this.indicator_onChange);\r\n    $(document).on(\"click\", \".js-indicator-remove\", this.removeIndicator_onClick);\r\n    $(document).on(\"click\", \".js-indicator-add\", this.addIndicator_onClick);\r\n    $(document).on(\"click\", \".js-strategy-choose\", this.chooseStrategy_onClick);\r\n    $(document).on(\"change\", \"[name='timeframe']\", this.timeframe_onChange);\r\n    //$(document).on(\"change\", \"[name=graphic_format]\", this.chartType_onChange);\r\n    $(document).on(\"click\", \"[name='apply']\", this.apply_onClick);\r\n    $(document).on(\"click\", \"[name='clearIndicators']\", this.clearIndicators_onClick);\r\n    $(document).on(\"click\", \"[name='pan']\", this.pan_onClick);\r\n    $(document).on(\"click\", \".js-lineWidth.\" + this.name, function(){\r\n        _this.setIndicatorWidth(this)\r\n    });\r\n    //    $(document).on(\"click\", \"[name='removeAllInstruments']\", this.removeAllInstruments_onClick);\r\n    //    $(document).on(\"click\", \"[name='removeSelectedInstrument']\", this.removeSelectedInstrument_onClick);\r\n    $(document).on(\"click\", \"[name='resetZoom']\", this.resetZoom_onClick);\r\n    //$(document).on(\"click\", \"[name='SelectInstrument']\", this.selectInstrument_onClick);\r\n    $(document).on(\"click\", \"[name='updateChart']\", this.updateChart_onClick);\r\n    $(document).on(\"click\", \"[name='zoom']\", this.zoom_onClick);\r\n    $(document).on(\"dblclick\", function () {\r\n        _this.viewData.chart.render({ \"forceRecalc\": true, \"resetViewport\": true, \"testForIntervalChange\": false });\r\n    });\r\n    $(_this.wrapper).on('iguanaChartEvents', function(event, name, data) {\r\n        if(name === 'chartDataReady') {\r\n            if(_this.viewData.chart && _this.dataRequestCounter == 0) {\r\n                _this.viewData.chart.updateVolumeByPrice();\r\n                _this.ui.initStatesControls();\r\n            }\r\n        } else if(name === 'selectInstrument') {\r\n            _this.ui.onSelectInstrument(data);\r\n        } else if(name === 'drawComplete') {\r\n            _this.ui.setUiStateForInstrumentLine(null, 0);\r\n            _this.ui.setUiStateForInstrumentForm(null, 0);\r\n            _this.ui.setUiStateForInstrumentText(null, 0);\r\n        }\r\n    });\r\n\r\n    $(_this.wrapper).on(\"click\", \".iChart-indicator-description a\", function(e){\r\n        e.stopPropagation();\r\n        e.stopImmediatePropagation();\r\n        return false;\r\n    });\r\n\r\n    //$(window).on(\"hashchange\", this.window_onHashChange);\r\n\r\n    $(window).on(\"resize\", function(){\r\n        _this.wrapper.trigger('iguanaChartEvents', ['chartResize']);\r\n    });\r\n\r\n    $(document).on(\"click\", \"[name='toggleVolumeByPrice']\", this.toggleVolumeByPrice_onClick);\r\n\r\n};\r\n"]}